.cfg
.isClient
.CurWorld
.GameName
.defaultMap
.CurMap
.enableReconnectNetwork
.cfg
.id
.name
.static
.key
.cfg
.map
.mix
.max
.players
.objects
.objID
.world
.ownerId
.isMainPlayer
.isEntity
.isPlayer
.map
.name
.curHp
.curVp
.movingStyle
.isMoving
.onGround
.isFlying
.platformUserId
.id
.playerCount
.createTime
.fullName
.modName
.plugin
.displayName
.entity
.enable
Blockman.player
Blockman.world
Blockman.gameSettings
.poleForward
.poleStrafe
.hideCloud
.hideFog
.viewBobbing
.bobbingCameraEffect
.restitution
.friction
.density
.lineVelocity
.angleVelocity
.useAnchor
.useGravity
.useCollide
.decalOffset
.decalColor
.decalAlpha
.decalSurface
.decalImageType
.decalTiling
.decalTexture
.mesh
.force = :new(0, 10, 0)
.useRelativeForce = true
.torque = :new(0, 10, 0)
.useRelativeTorque = true
.length = 2
.fixedJustify = true
.radius = 1
.useSpring = true
.springTargetAngle = 90
.stiffness = 5
.damping = 1
.useMoter = true
.motorTargetAngleVelocity = 30
.motorForce = 10
.length = 10
.stiffness = 52
.damping = 0.1
.fixedJustify = true
.radius = 0.25
.thickness = 0.20
.coil = 1
.length = 10
.radius = 10
.upperLimit = 10
.lowerLimit = 10
.name
.id
.visible
.collision
.slavePartID
.masterLocalPos
.slaveLocalPos
.color
.Now()
.Timer(time, func, ...)
.LightTimer(stack, time, func, ...)
:getMapById(id)
:getMap(name)
:getOrCreateStaticMap(name)
:createDynamicMap(name, closeWhenEmpty)
:SystemChat(typ, key, ...)
:SystemNotice(typ, key, time, ...)
:isTimeStopped()
:setTimeStopped(stepped)
:setWorldTimeSpeed(time)
:getObject(objID)
:getAllObject()
:filterWord(content)
:isValid()
:getBlock(pos)
:getRegion(key)
:getAllRegion()
:getBlockConfigId(pos)
:posConvertBlock(pos, fullName)
:fillBlocks(min, max, fullName)
:clearBlocksInArea(min, max, fullNames)
:checkBlockFall(pos)
:clearBlocks(min, max, all)
:getTouchObject(min, max)
:getTouchEntities(min, max, includeDead)
:getNearbyEntities(pos, maxDistance)
:getBlockPosInArea(min, max, fullNames)
:setVar(key, value)
:getVar(key)
:movePlayersTo(map, pos)
:saveBlocks(min, max)
:loadBlocks(min, max, data)
:createBlock(pos, fullName)
:removeBlock(pos)
:getBlockData(pos)
:getOrCreateBlockData(pos)
:setBlockData(pos, value)
:bakeLightAndSave(maxLightMode, forceRecalculate)
:isOwner(object)
:setOwner(obj)
:removeOwner(obj)
:addRegion(min, max, cfgName)
:removeRegion(key, isCheckTrigger)
.GetNameCfgId(name)
.GetNameCfg(name)
.GetAirBlockName()
:triggerRegions(pos, name, context)
REGION_ENTER
REGION_LEAVE
BLOCK_CLICK
BLOCK_PLACE
BLOCK_BREAK
BLOCK_SPAWN
BLOCK_REMOVED
BLOCK_HITTED
BLOCK_HITTED_BY_RAY
BLOCK_TOUCH
BLOCK_APART
:getWorkSpace()
:getTouchParts(min, max)
:cfg()
:data(key)
:setData(key, val)
:timer(time, function, ...)
:lightTimer(stack, time, func, ...)
:distance(obj)
:isValid()
:setMap(map)
:setRotationYaw(yaw)
:setRotationPitch(pitch)
:getRotationYaw()
:getRotationPitch()
:setPosition(pos)
:getPosition()
:delayCall(func, time)
:destroy()
:prop(key)
:setProp(key, value)
:isSwimming()
:jump(x, z)
:getSpeed()
:getCollidableUnderfootObjId()
:isControl()
:setBodyTurnSpeed(speed)
:getBodyTurnSpeed()
:isClimbing()
:curBlockPos()
:changeFlyMode(mode)
:setPos(pos, yaw, pitch)
:getFrontPos(dis, isFoot, bCenter)
:tray()
:owner()
:getNearbyEntities(maxDistance, filter)
:getEyePos()
:setAlwaysAction(action)
:updateUpperAction(action, ticks)
:getBaseAction()
:getUpperAction()
:getPrevBaseAction()
:getPrevUpperAction()
:setAlpha(alpha, time)
:removeActionMapping(action)
:isDead()
:getInvisible()
:getBodyYaw()
:setBodyYaw(yaw)
:setShowName(txt)
:setHeadText(x, y, txt)
:setShowHpColor(color)
:getShowHpColor()
:addEffect(name, effectName, once, pos, yaw, scale, socketName)
:delEffect(name, smooth)
:getActorName()
:setActorScale(scale)
:setAlpha(alpha, time)
:play3dSound(filename, isLoop)
:showHeadMessage(txt)
:setGuideTarget(targetPosition, texName, speed)
:setGuideTarget1(targetEntity, texName, speed)
:delGuideTarget()
:setGhost(enable, color, interval, num)
:setHoldModelARGBStrength(r, g, b, a)
:getHoldModelARGBStrength()
:setUseOverlayColorReplaceMode(masterSlaveName, isUse)
:setOverlayColor(masterSlaveName, color)
:applySkin(skin)
:setEntityHide(hide)
:changeActor(actorName, clearSkin)
:getHandItem()
:searchItem(cfgKey, val, type_list)
:setEntityActorFlashEffect(add)
:parserBubbleMsg(packet)
:setHp(hp)
:addHp(hp)
:setVp(vp)
:addVp(vp)
:setPlayerControl(player)
:serverRebirth(map, pos, yaw, pitch)
:getCtrlPlayer()
:setMapPos(map, pos, yaw, pitch)
:face2Pos(pos)
:changeSkin(skinData)
:getTeam()
:getRebirthPos()
:setRebirthPos(pos, map)
:addItem(fullName, count, proc, reason)
:takeDamage(damage, from, isFormula, cause)
:kill(from, cause)
ENTITY_ENTER
ENTITY_LEAVE
ENTITY_CLICK
ENTITY_TOUCHDOWN
ENTITY_DAMAGE
ENTITY_DIE
ENTITY_REBIRTH
ENTITY_USE_ITEM
WEAR_EQUIPMEN
TAKEOFF_EQUIPMEN
HAND_ITEM_CHANGED
JOIN_TEAM
LEAVE_TEAM
ENTER_MAP
LEAVE_MAP
ENTITY_TOUCH_ALL
ENTITY_HITTED
HIT_ENTITY
HIT_BLOCK
ENTITY_HITTED_BY_RAY
HIT_ENTITY_BY_RAY
HIT_BLOCK_BY_RAY
SETTLE_ITEM
REMOVE_ITEM
.GetCfg(cfgName)
:getValue(key)
.addValueDef(key, init, toSelf, toOther, saveDB, client)
.addValueFunc(key, func)
:setValue(key, value, noSync)
:doHurtRepel(vector)
:setActorPause(isPause)
:getActorPause()
:setActorAnimRewind(rewind)
:isActorAnimRewind()
:refreshUpperAction()
:refreshBaseAction()
:setBaseActionScale(scale)
:getBaseActionScale()
:setActionTimeScale(action, scale)
:getActionTimeScale(action)
:removeActionTimeScale(action)
:isActionInTimeScaleMap(action)
:getAIControl()
:startAI()
:stopAI()
:setAITargetPos(pos, enable)
:enableAITargetPos(enable)
:addSkill( fullName )
:removeSkill ( fullName )
:addBuff( fullName )
:removeBuff(buff)
:createPet(cfgName, show, map, pos)
:addPet(entity, index)
:relievedPet(index)
:changePetCfg(index, cfgName)
:showPet(index, map, pos)
:hidePet(index)
:getPet(index)
:addCurrency(coinName, count, reason)
:payCurrency(coinName, count, clear, check, reason)
:getWalletBalance(coinName)
:sendTip(tipType, textKey, keepTime)
ENTITY_ENTER
ENTITY_LEAVE
PRE_CHECK_PICK_ITEM
Skill.Cast(fullName, packet, entity)
Skill.Cfg(fullName)
HIT_ENTITY
HIT_BLOCK
Missile.GetCfg(cfgName)
DropItemServer.Create(params)
.Instance()
:drawLine(from, to, color)
:drawAABB(min, max, color)
:addEntry(flagName, renderFunc)
:drawTriangle(vertex1, vertex2, vertex3, color)
:drawCircle(center, radius, normal, color)
:drawSphere(center, radius, color)
:setLineWidth(width)
.Instance()
:play3dSound(filePath, pos, isLoop)
:set3DMinMaxDistance(nSoundId, minDistance, maxDistance)
:set3DRollOffMode(nSoundId, mode)
:play2dSound(filePath, isLoop)
:stopSound(nSoundId)
:setSoundsVolume(nSoundId, volume)
:getSoundsVolume(nSoundId)
:isPlaying(nSoundId)
:pauseSound(nSoundId)
:resumeSound(nSoundId)
:allMute(isMute)
:setGlobalVolume(volume)
:setSoundSpeed(nSoundId, percentage)
:getGlobalVolume()
:attach(entity)
:jump()
Blockman:getUserAction()
Blockman:getHitInfo()
:switchPersonView()
:setCanSwitchView(false)
:setPersonView(1)
:getPersonView()
:control()
:setViewEntity(entity)
:viewEntity()
:getRayTraceResult(screenPos, rayLength, isNeedLogicPositinToScreenPosition, getHitEffectRelated, getTrajectoryEffectRelated, ignoreObjIds)
:getClosestRayTraceResult(startPos, endPos, rayLength)
:getRayResultBetweenPosAndScreen(pos, screenPos, rayLength)
:changeCameraView(pos, yaw, pitch, distance, smooth)
:changeCameraCfg(config, modeViewIndex)
:getCameraInfo(viewIndex)
:getScreenPos(position)
:getScreenSize()
:playEffectByPos(templateName, position, yaw, duration, scale)
:delEffect(templateName, position)
:addBetweenEffect(templateName, position, endPos, duration)
:trajectoryEffect(templateName, position, pitch, yaw, roll, duration, extendName)
:getClickPos()
:toScreenClickPos(pos)
:cfg()
:full_name()
:stack_count_max()
:null()
:tid()
:slot()
:replace(fullName)
:consume(count)
:stack_count()
:set_stack_count(count)
:stack_free()
:is_block()
:block_id()
:block_cfg()
:set_block_id(id)
:set_block(name)
:model(act)
:icon()
.new(fullName, count)
.newBlock(fullName, count)
:owner()
:capacity()
:set_capacity(capacity)
:add_capacity(capacity)
:max_capacity()
:set_max_capacity(capacity)
:avail_capacity()
:type()
:is_valid_slot(slot)
:fetch_item(slot)
:query_items(cmp)
:find_free(force)
:count_item_num_by_fullname(fullname)
:add_tray(tray)
:fetch_tray(tid)
:query_trays(filter)
:find_item(item_name)
:new_tray(type, capacity)
:remove_item(slot)
:settle_item(slot, item)
.Instance()
:isEnabled()
:setEnabled(value)
:isDrawColliderEnabled()
:setDrawColliderEnabled(enabled)
:isDrawRegionEnabled()
:setDrawRegionEnabled(enabled)
:getCameraSensitive()
:setCameraSensitive(sensitive)
:setCustomFog(start, end, density, color)
:setMainLightDir(dir)
:setMainLightColor(color)
:setSubLightColor(color)
:setAmbientColor(color)
:setBrightness(color)
:getMainLightDir()
:getMainLightColor()
:getSubLightColor()
:getAmbientColor()
:getBrightness()
:setActorReceiveBlockLight(val)
:setActorMainLightColor(color)
:setActorSubLightColor(color)
:setActorAmbientColor(color)
:setActorBrightness(color)
:getActorMainLightColor()
:getActorSubLightColor()
:getActorAmbientColor()
:getActorBrightness()
:setCurQualityLevel(level)
:setCurQualityLevel(level)
:getEnableSpecular()
:setEnableBlockRender(_val)
:setEnableActorRender(_val)
:setEnableEffectRender(_val)
:setWorldEffectVisualDistance(distance)
:getWorldEffectVisualDistance()
:clearSky()
:addSky(right, left, top, bottom, back, front, time, transition)
:setEnableAntiAliasing(_val)
:getEnableAntiAliasing()
:setEnableBloom(_val)
:getEnableBloom()
:setBloomThreshold(val)
:getBloomThreshold()
:setBloomSaturation(val)
:getBloomSaturation()
:setBloomDeviation(val)
:getBloomDeviation()
:setBloomIntensity(val)
:getBloomIntensity()
:setEnableMotionBlur(_val)
:getEnableMotionBlur()
:setMotionBlurStrength(_val)
:getMotionBlurStrength()
:setEnableRadialBlur(_val)
:setRadialBlurStrength(_val)
:loadCameraCfg(config)
:setPersonView(viewMode)
:clearLight()
:addLight(mainLightDir, mainLightColor, subLightColor, ambientLightColor, brightness, time, transition)
:clearActorLight()
:addActorLight(mainLightColor, subLightColor, ambientLightColor, brightness, time, transition)
:beginMouseMove(x, y)
:setMouseMoveState(bState)
:endMouseMove(x, y)
:setMousePos(x, y, immd)
:clearMousePos()
:setLockViewPos(value)
:setExtraCameraDistance(distance)
:isLockBodyRotation()
:setLockBodyRotation(value)
:isLockSlideScreen()
:setLockSlideScreen(value)
.GetService(name)
.TriggersAll(name)
.GetStartGamePlayerCount()
.GetGameTime()
.GetAllPlayers()
.GetAllPlayersCount()
.GetSurvivePlayers()
.GetPlayerByUserId(userId)
.GetSurvivePlayersCount()
GAME_INIT
.CreateTeam(id)
.TryJoinTeamByPlayer(player, teamId)
.GetTeam(id, create)
.Exit(player)
GAME_START
GAME_OVER
GAME_EXIT
:getFirstPlayer()
:joinEntity(entity)
:leaveEntity(entity)
:dismiss()
:getEntityList()
:openWindow("dwInstance")
:openSceneWindow
:createWindow(name, type)
:createStaticText(name)
:createStaticImage(name)
:createButton(name)
:closeWindow("dwInstance", ...)
:closeSceneWindow("dw1")
:isOpenWindow("dwInstance")
:child(childName)
:close(...)
:isAlive()
:getWindow()
:clone()
:setProperty("Alpha", 0.5)
:setAlpha(1.0)
:setDestroyedByParent(true)
:setAlwaysOnTop(true)
:setLevel(1)
:setEnabled(true)
:setVisible(true)
:setClippedByParent(true)
:setWantsMultiClickEvents(true)
:setMousePassThroughEnabled(true)
:setText("aa")
:setHorizontalAlignment(1)
:setArea2({0,0},{0,0},{0,100},{0,100})
:setVerticalAlignment(1)
:setPosition(UDim2.new(0, 100, 0, 100))
:setSize(UDim2.new(1, 0, 1, 0))
:setXPosition(UDim.new(0,100))
:setYPosition(UDim.new(0.5,0))
:setWidth(UDim.new(0.5,0))
:setHeight(UDim.new(0.1,100))
:setFontStyle("BungeeRegular")
:setFontSize(40)
:getProperty("Alpha")
:getType()
:getAlpha()
:isDestroyedByParent()
:isAlwaysOnTop()
:getLevel()
:isDisabled()
:isVisible()
:isClippedByParent()
:wantsMultiClickEvents()
:isMousePassThroughEnabled()
:getText()
:getHorizontalAlignment()
:getVerticalAlignment()
:getPosition()
:getSize()
:getPixelPosition()
:getXPosition()
:getPixelSize()
:getYPosition()
:getWidth()
:getHeight()
:getID()
:isChildID(Id)
:isChildIDRecursive(Id)
:getChildById(id)
:getChildRecursiveById(id)
:getChildAtIdx(0)
:getParent()
:getRootWindow()
:destroy()
:removeChildByID(id)
:cleanupChildren()
:addChild(child)
:removeChild(child)
:getChildCount()
:isChild(child)
:markNeedsLayouting()
:needsLayouting()
:layout()
:setProperty("space", 5)
:getProperty("space")
:setProperty("space", 5)
:getProperty("space")
:setProperty("hInterval", 20)
:getProperty("rowSize")
:setProperty("Image", "icon_7.png")
:getProperty("Image")
:setImage("gameres|asset/Texture/Gui/def_image.png")
:isFrameEnabled()
:setFrameEnabled(true)
:isBackgroundEnabled()
:setBackgroundEnabled(true)
:setProperty("FrameEnabled", false)
:getProperty("FrameEnabled")
:setTextColours(Color3.new(1,1,1))
:getTextColours()
:setHorizontalFormatting(0)
:getHorizontalFormatting()
:setVerticalFormatting(0)
:getVerticalFormatting()
:isFrameEnabled()
:setFrameEnabled(true)
:isBackgroundEnabled()
:setBackgroundEnabled(true)
:setVerticalScrollbarEnabled(true)
:isVerticalScrollbarEnabled()
:setHorizontalScrollbarEnabled(true)
:isHorizontalScrollbarEnabled()
:setProperty("NormalImage", "icon_7.png")
:getProperty("NormalImage")
:isPushed()
:setPushedState(true)
:setNormalImage("gameres|asset/Texture/Gui/button_green_nor.png")
:setPushedImage("gameres|asset/Texture/Gui/button_green_act.png")
:setProperty("CurrentProgress", 0.5)
:getProperty("CurrentProgress")
:getProgress()
:setProgress(0.5)
:getStepSize()
:setStepSize(0.01)
:step()
:adjustProgress(delta)
:setVertical(true)
:isVertical()
:setReversed(true)
:isReversed()
:getCurrentValue()
:getMaxValue()
:getClickStep()
:setMaxValue(maxVal)
:setCurrentValue(value)
:setClickStep(step)
.onSliderValueChanged = function() end
:setSelection(start_pos,end_pos)
:setMaskCodePoint(code_point)
:isReadOnly()
:isTextMasked()
:getSelectionStartIndex()
:getSelectionEndIndex()
:getSelectionLength()
:getMaskCodePoint()
:getMaxTextLength()
:setReadOnly(setting)
:setTextMasked(setting)
:setSelectionStart(start_pos)
:setSelectionLength(length)
:setMaxTextLength(max_len)
.onReadOnlyModeChanged = function() end
.onMaskedRenderingModeChanged = function() end
.onMaximumTextLengthChanged = function() end
.onTextSelectionChanged = function() end
.onEditboxFull = function() end
.onTextAccepted = function() end
:setContentPaneArea(area)
:setVerticalOverlapSize(overlap)
:getVerticalOverlapSize()
:getVerticalScrollPosition()
:setVerticalScrollPosition(position)
:isVertScrollbarAlwaysShown()
:setShowVertScrollbar(setting)
:isHorzScrollbarAlwaysShown()
:setShowHorzScrollbar(setting)
:isContentPaneAutoSized()
:setContentPaneAutoSized(setting)
:getContentPaneArea()
:getHorizontalStepSize()
:setHorizontalStepSize(step)
:getHorizontalOverlapSize()
:setHorizontalOverlapSize(overlap)
:getHorizontalScrollPosition()
:setHorizontalScrollPosition(position)
:getViewableArea()
.onContentPaneChanged = function() end
.onAutoSizeSettingChanged = function() end
:setSelected(select)
:isSelected()
.onSelectStateChanged = function() end
:setGroupID(group)
:getGroupID()
:isSelected()
:setActorName("boy.actor")
:getActorName()
:setSkillName("idle")
:getSkillName()
:setActorScale(0.5)
:getActorScale()
:setPosition(:v3(10,10,10))
:getPosition()
:setRotateX(90)
:getRotateX()
:setRotateY(90)
:getRotateY()
:setRotateZ(90)
:getRotateZ()
:useBodyPart("hair","my_source_hair1")
:unloadBodyPart("hair")
:scaleBodyPart("head",:v3(2,1,1))
:offsetBodyPart("head",:v3(2,1,1))
:isActorPrepared()
:setRotation({x = 0, y = 1, z = 2})
:getRotation()
:setPosition({x = 0, y = 1, z = 2})
:getPosition()
:setObjID(10)
:getObjID()
:toText(arg)
.getYearMonthStr(time)
.getYearWeekStr(time)
.getWeeksOfYear(time)
.getYearDayStr(time)
.getMonthStartTime(time)
.getWeekStartTime(time)
.getDayStartTime(time)
.getMonthEndTime(time)
.getWeekEndTime(time)
.getDayEndTime(time)
.isSameDay(time1, time2)
.isSameWeek(time1, time2)
:new(x, y, z)
:lenSqr()
:len()
:copy()
:isZero()
:normalize()
:blockPos()
:dot(rhs)
:cross(rhs)
:getDataByUserId(subKey, dataKey, callback, failback)
:setData(subKey, dataKey, data, immediately)
:trySendZIncBy(immediately)
:trySendZExpire(immediately)
:hasCachedData()
:ZExpireat(setName, timeStamp)
:ZIncrBy(setName, key, value)
:ZAdd(setName, key, value)
:ZRemove(setName, key)
:ZScore(setName, key, callback)
:ZRange(setName, start, end, callback)
:LoadCacheByUserIds(userIds, callback)
:CancelRequest(session)
:GetCache(userId)
:payMoney(player, uniqueId, price, callBack)
:defineAdPlace(place)
:reportAdPlace(place)
:videoAd(place, adIndex, callBack)
:registerEnableVideoAdChange(callBack)
:canEnableVideoAd()
:setProperty("useGravity", "true")
:move(:new(1,1,1))
:moveUntilCollide(:new(1,1,1))
:getVolume()
:setMass(2)
:getMass()
:setDensity(2)
:getDensity()
:setFriction(2)
:getFriction()
:setRestitution(2)
:getRestitution()
:applyForce(:new(1,1,1))
:applyTorque(:new(1,1,1))
:setUseAnchor(setting)
:isUseAnchor()
:setUseGravity(false)
:isUseGravity()
:setLineVelocity(:new(1,0,0))
:getCurLineVelocity()
:setAngleVelocity(:new(1,0,0))
:getCurAngleVelocity()
:destoryAllConstraint()
:connect(signalKey, handle)
:isConstrainted()
:getAllConstrainPtr()
:setPrimaryPart(part)
:getMasterPart()
:getSlavePart()
.Create("Part")
:getInstanceID()
.getByInstanceId(id)
:setParent(parent)
:getParent()
:getChildrenCount()
:getChildAt(0)
:findFirstAncestor(name)
:findFirstAncestorOfClass(className)
:findFirstChild(name, recursive)
:findFirstChildOfClass(className)
:isA(className)
:isAncestorOf(descendant)
:isDescendantOf(ancestor)
:clone()
:destroy()
.sendServerHandler(player, name, packet)
.sendServerHandlerToTracking(entity, name, packet, includeSelf)
.sendServerHandlerToAll(name, packet)
.sendClientHandler(name, packet, resp)
.sendOtherClient(userId, name, packet)
:subscribeEvent(name, func, args)
:unsubscribeEvent(name, index)
:emitEvent(name, args)
.CheckTriggers(cfg, name, context)
.CheckTriggersOnly(cfg, name, context)
.onMouseClick = function() end